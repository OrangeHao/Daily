apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.versions.applicationId
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //Arouter路由配置
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
                includeCompileClasspath = true
            }
        }
    }

    signingConfigs {
        release {
            storeFile file("../signkey/orange.jks")
            storePassword "123456"
            keyAlias "orange"
            keyPassword "123456"
        }

        debug {
            storeFile file("../signkey/orange.jks")
            storePassword "123456"
            keyAlias "orange"
            keyPassword "123456"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            crunchPngs false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:27.1.1'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Arouter路由
    kapt rootProject.ext.dependencies["arouter_compiler"]

    implementation project(':module_base')
    if (!Boolean.valueOf(rootProject.ext.isModule)) {
        implementation project(':module_main')
        implementation project(':module_news')
        implementation project(':module_pictures')
    }
}
